
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработкуКлавиатуры();
	
	//	НЕПОСРЕДСТВЕННО ДЛЯ ФОРМЫ ГДЕ СКАНИРУЮТ 
	Звук = Ложь;
	Вибро = Истина;
	
	//в этой процедуре идёт инициализация внешней компоненты взависимости от принадлежности склада пользователя
	ВК.ИнициализироватьСканер(Ложь, Истина);	
	
	//Сообщить("Склад_иниц. сканера: "+Склад_РСК.ПолучитьИмяРодителяСкладаТекущегоПользователя());
	//ВК.ИнициализироватьСканер(Ложь, Истина); аналогочна коду ниже
	//Если Склад_РСК.ПолучитьИмяРодителяСкладаТекущегоПользователя() = "Группа Северо-Запад" Тогда
	//	//RSDriver API 0.1.0
	//	#Если МобильноеПриложениеКлиент ИЛИ МобильныйКлиент Тогда
	//		
	//		ВК_СПб.ИнициализироватьСканер(Ложь,Истина);
	//		
	//	#КонецЕсли
	//	
	//Иначе
	//	//RSDriver API 0.0.7
	//	
	//	#Если МобильноеПриложениеКлиент ИЛИ МобильныйКлиент Тогда
	//		//Попытка
	//		//	глВКRSDriver.УстановитьПараметр("Barcode_BEEP",Звук);
	//		//	глВКRSDriver.УстановитьПараметр("Barcode_BZZ",Вибро);
	//		//	глВКRSDriver.Подключить("Barcode");	
	//		//Исключение
	//		//	Сообщить("Ошибка ИнициализироватьСканер: "+ОписаниеОшибки());
	//		//КонецПопытки;
	//	#КонецЕсли
	//КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПриЗакрытии()
	
	ВК.ОтключитьСканер();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
//	ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаКлиенте
Процедура ПодключитьОбработкуКлавиатуры()
		
	#Если МобильноеПриложениеКлиент ИЛИ МобильныйКлиент Тогда
		
		Попытка
			глВКRSDriver.Подключить("Keyboard");	
		Исключение
			//Сообщить("Ошибка: глВКRSDriver.Подключить(Keyboard): "+ОписаниеОшибки());
		КонецПопытки;
		
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьОбработкуКлавиатуры ()
	
	#Если МобильноеПриложениеКлиент ИЛИ МобильныйКлиент Тогда
		
		Попытка
			глВКRSDriver.Отключить("Keyboard");	
		Исключение
		КонецПопытки;
		
	#КонецЕсли
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПоместитьМакетВоВременноеХранилище(ИмяМакета) Экспорт 
	
	Макет = ПолучитьОбщийМакет(ИмяМакета);  
    АдресФайлаВХранилище = ПоместитьВоВременноеХранилище(Макет);
	Возврат АдресФайлаВХранилище; 
	
КонецФункции


///////////////////////////////////////////////////////////////////////////////
//	ПРОЦЕДУРЫ И ФУНКЦИИ 
//	НЕПОСРЕДСТВЕННО ДЛЯ ФОРМЫ ГДЕ СКАНИРУЮТ

&НаКлиенте
Процедура ИнициализироватьСканер()
	
	#Если МобильноеПриложениеКлиент ИЛИ МобильныйКлиент Тогда
		Попытка
			глВКRSDriver.УстановитьПараметр("Barcode_BEEP",Звук);
			глВКRSDriver.УстановитьПараметр("Barcode_BZZ",Вибро);
			глВКRSDriver.Подключить("Barcode");	
		Исключение
			Сообщить("Ошибка ИнициализироватьСканер: "+ОписаниеОшибки());
		КонецПопытки;
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьСканер()
	
	#Если МобильноеПриложениеКлиент ИЛИ МобильныйКлиент Тогда
		
		Попытка
			глВКRSDriver.Отключить("Barcode");	
		Исключение
			Сообщить("Ошибка: глВКRSDriver.Отключить(Barcode): "+ОписаниеОшибки());
		КонецПопытки;
		
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	//Сообщить("Источник: "+Строка(Источник));
	//Сообщить("ИмяСобытия: "+Строка(ИмяСобытия));
	//Сообщить("Параметр: "+Строка(Параметр));
	
	Если Источник = "ПодключаемоеОборудование"
		И ИмяСобытия = "Barcode"
		И ВводДоступен() Тогда
		
		Пароль = Параметр;
		
		ИзменитьПользователяВПараметрахСеанса(Параметр);
		
		Если ВключитьПроверку тогда
			ПроверитьТекущегоПользователяНаСервере();
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекущийПользователь) Тогда
			
			//
			Если ТекущийПользователь <> ТСД_калуга Тогда
				ОткрытьФорму("Обработка.ТСД_РСК.Форма.Начало");
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьПользователяВПараметрахСеанса(ПарольТСД)

	//
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Пользователи.Ссылка КАК Пользователь
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|ГДЕ
		|	НЕ Пользователи.ПометкаУдаления
		|	И Пользователи.ПарольТСД ПОДОБНО &ПарольТСД";
	
	Запрос.УстановитьПараметр("ПарольТСД", ПарольТСД);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		// Вставить обработку выборки 
		ПараметрыСеанса.ТекущийПользователь = ВыборкаДетальныеЗаписи.Пользователь;
		ТекущийПользователь = ВыборкаДетальныеЗаписи.Пользователь;
		Если ВключитьПроверку Тогда
			Сообщить("Найден польователь: " + ВыборкаДетальныеЗаписи.Пользователь.Наименование);
		КонецЕсли;
		
	КонецЕсли;
		

КонецПроцедуры // ИзменитьПользователяВПараметрахСеанса()


&НаСервере
Процедура ПроверитьТекущегоПользователяНаСервере()
	
	//ТекПоль = Пользователи.ТекущийПользователь();
	//ТекПоль = ПараметрыСеанса.ТекущийПользователь;
	
	Сообщить("Пользователи.ТекущийПользователь(): " + Пользователи.ТекущийПользователь());
	
	Сообщить("ПараметрыСеанса.АвторизованныйПользователь: "+ ПараметрыСеанса.АвторизованныйПользователь);
	
	Сообщить("ПараметрыСеанса.ТекущийПользователь: " + ПараметрыСеанса.ТекущийПользователь);
	
	Сообщить("ПользователиИнформационнойБазы.ТекущийПользователь(): "+ПользователиИнформационнойБазы.ТекущийПользователь());
	
	
	
КонецПроцедуры


&НаКлиенте
Процедура ВиброПриИзменении(Элемент)
	ИнициализироватьСканер();
КонецПроцедуры

&НаКлиенте
Процедура ЗвукПриИзменении(Элемент)
	ИнициализироватьСканер();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Ответ = Вопрос("Действительно хотите выйти ?",РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет,"Выход из программы",);
	Если ответ = КодВозвратаДиалога.Да Тогда
		
		
		//	НЕПОСРЕДСТВЕННО ДЛЯ ФОРМЫ ГДЕ СКАНИРУЮТ
		ВК.ОтключитьСканер();
		
		ВК.ОтключитьОбработкуКлавиатуры();
		
		ВК.УдалитьФайлЗвукаОшибки();

		
		ЗавершитьРаботуСистемы(Ложь);
		
	Иначе
		Отказ = Истина;
	КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьФайлЗвукаОшибки()
	
	// удаляем файл звука ошибки
	Попытка 
		УдалитьФайлы("/storage/sdcard0/ErrorScanAlarm.mp3");
	Исключение
	КонецПопытки;

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//ТекущийПользователь = Пользователи.ТекущийПользователь();
	
КонецПроцедуры


&НаСервере
Процедура ОбновитьОтображениеПользователя()

	//Если ТекущийПользователь = ТСД_калуга Тогда
	//	
	//	Элементы.ТекущийПользователь.Заголовок
	//	
	//КонецЕсли;

КонецПроцедуры // ОбновитьОтображениеПользователя()


&НаКлиенте
Процедура Подтвердить(Команда)
	Если ТекущийПользователь <> ТСД_калуга Тогда
	ОткрытьФорму("Обработка.ТСД_РСК.Форма.Начало");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьПроверку(Команда)
	Если НЕ ВключитьПроверку Тогда
		ВключитьПроверку = Истина;
	Иначе
		ВключитьПроверку = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВводПоШтучноИзменить(Команда)
	Если ВводПоШтучно Тогда
		Ответ = Вопрос("Выключить ВВОД ПО ШТУЧНО ?",РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ВводПоШтучно = Ложь;
		КонецЕсли;
	Иначе
		
		Ответ = Вопрос("Включить ВВОД ПО ШТУЧНО ?",РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ВводПоШтучно = Истина;
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТестированиеДрайвера(Команда)
	ОткрытьФорму("Обработка.ТестированиеДрайвера.Форма.ОсновнаяФорма");
КонецПроцедуры
