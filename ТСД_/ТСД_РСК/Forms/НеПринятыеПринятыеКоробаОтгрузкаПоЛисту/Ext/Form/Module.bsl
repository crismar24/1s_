
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОтгрузочныйЛист = Параметры.ОтгрузочныйЛист;
	Реализация		= Параметры.Реализация;
	ОсновнойСклад	= Параметры.ОсновнойСклад;
	
	ОбновитьСписокПринятыхНеПринятыхКоробов();
	
	Заголовок = "Короба по " + СокрЛП(Реализация.Номер);
	//
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Действие = "";
	
	Если НЕ Элементы.Список.ТекущиеДанные.Отгружена Тогда
		// если Коробка красная - не принята - задать вопрос о добавлении коробки в ручную
		
		Если Вопрос("Отгрузить коробку в ручную ?",РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			
			Действие = "Отгрузить коробку";
			
			// закрыть форму с ответом структурой, где указать номер коробки и действие - что нужно сделать - удалить или добавить коробку
			// возможно в ответе передавать РеализацияРСК
			//"Добавить коробку"
			//"Удалить коробку"
			Закрыть(Новый Структура("Действие, Коробка",Действие,Элементы.Список.ТекущиеДанные.Коробка));
			
		КонецЕсли;
		
	Иначе
		
		// если Коробка зеленая - принята		- задаить вопрос о удалении коробки из принятых
		
		Если Вопрос("Удалить коробку из Отгруженных ?",РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			
			Действие = "Удалить коробку из отгруженных";
			
			// закрыть форму с ответом структурой, где указать номер коробки и действие - что нужно сделать - удалить или добавить коробку
			// возможно в ответе передавать РеализацияРСК
			//"Добавить коробку"
			//"Удалить коробку"
			Закрыть(Новый Структура("Действие, Коробка",Действие,Элементы.Список.ТекущиеДанные.Коробка));
			
		КонецЕсли;
		
	КонецЕсли;
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтгрузитьОставшиесяКороба(Команда)
	Действие = "ОтгрузитьОставшиесяКороба";
	Закрыть(Новый Структура("Действие, Коробка",Действие,));
КонецПроцедуры

&НаКлиенте
Процедура СделатьНеотгруженнымиОставшиесяКороба(Команда)
	Действие = "СделатьНеотгруженнымиОставшиесяКороба";
	Закрыть(Новый Структура("Действие, Коробка",Действие,));
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если Источник = "ПодключаемоеОборудование"
		И ИмяСобытия = "Barcode"
		И ВводДоступен()	
		Тогда	
		
		//найти отгруз. лист
		ШК = Параметр;
		ОбработатьШтрихкод(ШК);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьШтрихкод(ШК)

	//
	Если Лев(ШК,3) = "002" Тогда
		
		//находим реализацию, номер коробки
		//найти в ТЧ коробки для Отгрузки
		ОтветСтруктура = НайтиРеализациюПоШК(ШК);
		//ОтветСтруктура.Реализация
		//ОтветСтруктура.Коробка
		
		Если НЕ ЗначениеЗаполнено(ОтветСтруктура) Тогда
			МобильныйКлиент.ОповещениеПродолжительноеДваСигнала();
			Предупреждение("Коробка не найдена !");
			Возврат;
		КонецЕсли;
		
		//ДобавлялиРанее = ДобавлялиРанее(ОтветСтруктура.Реализация, ОтветСтруктура.Коробка);
		//Если ДобавлялиРанее Тогда
		Если ОтветСтруктура.КоробкаОтгружена тогда
			МобильныйКлиент.ОповещениеПродолжительноеДваСигнала();
			Предупреждение("Коробка сканирована ранее !");
			Возврат;
		КонецЕсли;
		
		//нельзя сканировать короба принадлежащие текущей Реализации
		Если ОтветСтруктура.Реализация <> Реализация Тогда 
			Возврат;
		КонецЕсли;
		
		//Добавить в Отгруз. лист в ТЧ ОтгруженныеКоробки
		ДобавитьВОтгрузочныйЛистКоробку(ОтветСтруктура.Коробка);
		
		ЗаписатьРаботаПоКоробам(ОтветСтруктура.Коробка, ПредопределенноеЗначение("Перечисление.РСК_ВидРаботыПоКоробкам.ОтгрузкаКладовщиком"));
		
		
		ОчиститьПоследнийВвод();
		ЗаполнитьПоследнийВвод(ОтветСтруктура.Коробка);
		
		ОбновитьСписокПринятыхНеПринятыхКоробов();
		
		УстановитьТекущуюСтроку(ОтветСтруктура.Коробка);
		
		МобильныйКлиент.ОповещениеКороткоеОдинСигнал();	//Оповещение удачного сканирования
		
		
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ДобавитьВОтгрузочныйЛистКоробку(Коробка)

	Док = ОтгрузочныйЛист.ПолучитьОбъект();
	нс = Док.ОтгруженныеКоробки.Добавить();
	нс.Реализация 	= Реализация;
	нс.Коробка		= Коробка;
	Док.Ответственный = Пользователи.ТекущийПользователь().ФизическоеЛицо;
	МоментСканирования 	= ТекущаяДата();
	ТекущиеСекунды		= число(Формат(МоментСканирования,"ДФ=ss"));
	МоментСканирования 	= ?( ТекущиеСекунды > 30, МоментСканирования + (60 - ТекущиеСекунды), МоментСканирования - ТекущиеСекунды );
	
	Если НЕ ЗначениеЗаполнено(Док.ДатаНО) Тогда
		Док.ДатаНО = МоментСканирования; 
	КонецЕсли;
	Док.ДатаОО = МоментСканирования;
	
	док.Записать(РежимЗаписиДокумента.Проведение);

КонецПроцедуры // ДобавитьВОтгрузочныйЛистКоробку()


&НаСервере
Процедура ЗаписатьРаботаПоКоробам(Коробка, ВидРаботы)
	
	РСК_ТСД.ЗаписатьРСК_РаботаПоКоробкам(Реализация, Коробка, Пользователи.ТекущийПользователь(), ВидРаботы, ОтгрузочныйЛист);

КонецПроцедуры // ОбработатьШтрихкод()

&НаСервере
Процедура ОчиститьПоследнийВвод()

	ПоследнийВвод.Очистить();

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоследнийВвод(Коробка)

	нс = ПоследнийВвод.Добавить();
	нс.Реализация = Реализация;
	нс.Коробка	= Коробка;

КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПоследнийВвод(Команда)
	//удалить Короб 
	//	ПоследнийВвод[0].Реализация
	//	ПоследнийВвод[0].Коробка
	//из ТЧ ОтгруженныеКоробки документа ОтгрузочныйЛист
	Если ПоследнийВвод.Количество() > 0 Тогда
		
		РеализацияУдаления 	= ПоследнийВвод[0].Реализация;
		КоробкаУдаления		= ПоследнийВвод[0].Коробка;
		ОтменитьПоследнийВводНаСервере(КоробкаУдаления);
		ОчиститьПоследнийВвод();
		
		//ВыделитьСтрокуСНоменклатуройЦветом(ПоследнийВвод[0].Реализация);
		
		ОбновитьСписокПринятыхНеПринятыхКоробов();
		
		УстановитьТекущуюСтроку(КоробкаУдаления);
		
		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОтменитьПоследнийВводНаСервере( Коробка)
	строки = Список.НайтиСтроки(Новый Структура("Коробка",Коробка));
	Попытка
	
		Док = ОтгрузочныйЛист.ПолучитьОбъект();
		//удаляем короб
		строки = Док.ОтгруженныеКоробки.НайтиСтроки(Новый Структура("Реализация, Коробка", Реализация, Коробка));
		Для Каждого Стр из строки Цикл
			Док.ОтгруженныеКоробки.Удалить(стр);
		КонецЦикла;
		
		Док.Записать(РежимЗаписиДокумента.Проведение);
	
	Исключение
		Сообщить("Ошибка записи Отгруз. листа "+ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДатуДок(СтрокаДата)
	Год 	= "20" + Сред(СтрокаДата,5,2);
	Месяц   = Сред(СтрокаДата,3,2);
	День    = Сред(СтрокаДата,1,2);
	Возврат Дата(Год,Месяц,День);

КонецФункции // ПоискРеализацииПоШК()

&НаСервере
Функция  НайтиРеализациюПоШК(ШК)
	
	Номер	= ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Сред(ШК,4,6));
	//Пока Лев(Номер,1) = "0" Цикл
	//	Номер = Прав(Номер,СтрДлина(Номер)-1);
	//КонецЦикла;
	
	Дата 	= Сред(ШК,10,6);
	Дата	= ПолучитьДатуДок(Дата);
	
	Коробка = Число(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Сред(ШК, 16, 3)));
	
	//Статусы = Новый Массив;		//пока что убрал по просьбе Малкиной
	//Статусы.Добавить(Перечисления.СтатусыРеализацийТоваров.КОтгрузке);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РСК_КоробкиОстатки.РеализацияРСК КАК Реализация,
		|	РСК_КоробкиОстатки.Коробка КАК Коробка,
		|	РСК_КоробкиОстатки.КоличествоПланОстаток = РСК_КоробкиОстатки.КоличествоФактОстаток КАК КоробкаОтгружена
		|ИЗ
		|	РегистрНакопления.РСК_Коробки.Остатки(
		|			,
		|			ОтгрузочныйЛист = &ОтгрузочныйЛист
		|				И РеализацияРСК.Номер = &Номер
		|				И РеализацияРСК.Дата = &Дата
		|				И РеализацияРСК.Склад = &ОсновнойСклад
		//|				И РеализацияРСК.СтатусОтгрузки В (&Статусы)
		|				И РеализацияРСК.Проведен
		|				И Коробка = &Коробка) КАК РСК_КоробкиОстатки";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Номер", Номер);
	//Запрос.УстановитьПараметр("Статусы", Статусы);
	Запрос.УстановитьПараметр("ОсновнойСклад", ОсновнойСклад);
	Запрос.УстановитьПараметр("ОтгрузочныйЛист", ОтгрузочныйЛист);
	Запрос.УстановитьПараметр("Коробка", Коробка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат Новый Структура("Реализация, Коробка, КоробкаОтгружена", ВыборкаДетальныеЗаписи.Реализация, ВыборкаДетальныеЗаписи.Коробка, ВыборкаДетальныеЗаписи.КоробкаОтгружена);
	КонецЦикла;
	
	Возврат Неопределено;

	
КонецФункции // НайтиДокументПоШК()

&НаСервере
Процедура УстановитьТекущуюСтроку(Коробка)
	
	//выделить строку с отсканированной Реализацией
	Строки = Список.НайтиСтроки(Новый Структура("Коробка",Коробка));
	Если Строки.Количество() > 0 тогда
		Элементы.Список.ТекущаяСтрока = Строки[0].ПолучитьИдентификатор();
	КонецЕсли;

КонецПроцедуры // УстановитьТекущуюСтроку()

&НаСервере
Процедура ОбновитьСписокПринятыхНеПринятыхКоробов()
	
	//
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РСК_КоробкиОстатки.Коробка,
		|	РСК_КоробкиОстатки.КоличествоФактОстаток >= РСК_КоробкиОстатки.КоличествоПланОстаток КАК Отгружена
		|ИЗ
		|	РегистрНакопления.РСК_Коробки.Остатки(
		|			,
		|			ОтгрузочныйЛист = &ОтгрузочныйЛист
		|				И РеализацияРСК = &Реализация) КАК РСК_КоробкиОстатки";
	
	Запрос.УстановитьПараметр("ОтгрузочныйЛист", ОтгрузочныйЛист);
	Запрос.УстановитьПараметр("Реализация", Реализация);
	Выборка = Запрос.Выполнить().Выбрать();
	Список.Очистить();
	Пока Выборка.Следующий() Цикл
		нс = Список.Добавить();
		нс.Коробка 		= Выборка.Коробка;
		нс.Отгружена 	= Выборка.Отгружена;
		
	КонецЦикла;
	
КонецПроцедуры

