
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОсновнойСклад = Параметры.ОсновнойСклад;
	Склад = Параметры.Склад;
	ИтоговаяИнвентаризация = Параметры.ИтоговаяИнвентаризация;
	ВводДанных = Параметры.ВводДанных;
	
	Заголовок = "Первичный ввод: " + ВводДанных.Номер;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Попытка
	
		ВК.ИнициализироватьСканер(Ложь, Истина);	
	
	Исключение
		
	КонецПопытки;
	
	НоменклатураПриИзменении(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		
		//если не открыли форму из главного меню
		Если НЕ ЗначениеЗаполнено(Упаковка) Тогда
			//заполнить Упаковку - Шт
			Упаковка = ПолучитьУпаковкуПоЕдИзмНоменклатуры(Номенклатура);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	Попытка
	
		ВК.ОтключитьСканер();
	
	Исключение
	
	КонецПопытки;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если Источник = "ПодключаемоеОборудование"
		И ИмяСобытия = "Barcode"
		И ВводДоступен()	// нужен ли ВводДоступен() в окне где нет определённого поля, куда сканировать ?
		Тогда
		//проверка даты на сервере и на ТСД
		//Сообщить("ТекущаяДата() на клиенте:" + ТекущаяДата());
		//Сообщить("ТекущаяДата() на сервере:" + ПолучитьТекущаяДатанаСервере());
		//Сообщить("ТекущаяДатаСеанса() на сервере:" + ПолучитьТекущаяДатаСеансаНаСервере());
		
		Штрихкод = Параметр;
		// ищем номенклатуру
		НайтиШтрихкодНоменклатуры(Штрихкод);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиШтрихкодНоменклатуры(Штрихкод)

	Структура = 	НайтиНоменклатуруУпаковкуПоШтрихкоду(Штрихкод);
	Номенклатура = 	Структура.Номенклатура;
	Упаковка = 		Структура.УпаковкаПоШтрихкоду;
	
	Если НЕ ЗначениеЗаполнено(Номенклатура) Тогда
		МобильныйКлиент.ОповещениеПродолжительноеДваСигнала();
		Предупреждение("Номенклатура с таким Штрихкодом не существует !");
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Упаковка) Тогда
		МобильныйКлиент.ОповещениеПродолжительноеДваСигнала();
		Предупреждение("Упаковка с таким Штрихкодом не существует !");
		Возврат;
	КонецЕсли;

	ШК = Штрихкод;
	
КонецПроцедуры // НайтиШтрихкодНоменклатуры()

&НаСервереБезКонтекста
Функция НайтиНоменклатуруУпаковкуПоШтрихкоду(Штрихкод)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШтрихкодыНоменклатуры.Номенклатура,
		|	ШтрихкодыНоменклатуры.Упаковка КАК УпаковкаПоШтрихкоду
		|ИЗ
		|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
		|ГДЕ
		|	ШтрихкодыНоменклатуры.Штрихкод = &Штрихкод";
	
	Запрос.УстановитьПараметр("Штрихкод", Штрихкод);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Номенклатура = Справочники.Номенклатура.ПустаяСсылка();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Возврат Новый Структура("Номенклатура, УпаковкаПоШтрихкоду", ВыборкаДетальныеЗаписи.Номенклатура, ВыборкаДетальныеЗаписи.УпаковкаПоШтрихкоду);
	КонецЦикла;
	
	Возврат Новый Структура("Номенклатура, УпаковкаПоШтрихкоду", , );
	
КонецФункции // НайтиНоменклатуруПоШтрихкоду()

&НаКлиенте
Процедура ВвестиКоличество(Команда)
	СуммаПоказателей = Группа + Линия + Место + Ячейка;
	Если СуммаПоказателей = 0 Тогда
		Предупреждение("Заполните в адрес и группу");
		Возврат;
	КонецЕсли;
	
	КоличествоДобавить = ОткрытьФормуМодально("Обработка.ТСД_РСК.Форма.ВводКоличестваИнвентаризация", Новый Структура("Номенклатура, Упаковка, ВводПоШтучно", Номенклатура, Упаковка, ВводПоШтучно));
	КоличествоДобавить = ?(ЗначениеЗаполнено(КоличествоДобавить), КоличествоДобавить, 0);
	
	Если КоличествоДобавить > 0 Тогда
		
		//
		Удачно = ДобавитьВводДанных(КоличествоДобавить);
		Если Удачно Тогда
			МобильныйКлиент.ОповещениеКороткоеОдинСигнал();
		Иначе
			МобильныйКлиент.ОповещениеПродолжительноеДваСигнала();
		КонецЕсли;
		
		ОчиститьФорму();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ДобавитьВводДанных(КоличествоДобавить)
	Попытка
		
		Док = ВводДанных.ПолучитьОбъект();
		НовСтр = Док.Данные.Добавить();
		НовСтр.Группа = Группа;
		НовСтр.Линия = Линия;
		НовСтр.Место = Место;
		НовСтр.Ячейка = Ячейка;
		НовСтр.Номенклатура = Номенклатура;
		//НовСтр.ЕдиницаИзмерения - спр Упаковки
		//найти упаковку у Номенклатуры по Номенклатура.ЕдиницаИзмерения
		НовСтр.ЕдиницаИзмерения = ПолучитьУпаковкуПоЕдИзмНоменклатуры(Номенклатура);
		НовСтр.Количество = КоличествоДобавить;
		//НовСтр.Примечания = "";	//пока не надо
		
		Док.Записать(РежимЗаписиДокумента.Запись);
		
		Возврат Истина;
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;

КонецФункции // ДобавитьВводДанных()

&НаСервере
Процедура ОчиститьФорму()

	Номенклатура = Неопределено;
	Упаковка = Неопределено;
	ШК = "";

КонецПроцедуры // ОчиститьФорму()

&НаКлиенте
Процедура СделатьПодготовлен(Команда)
	
	Удачно = СделатьПодготовленНаСервере();
	Если Удачно Тогда
		МобильныйКлиент.ОповещениеКороткоеОдинСигнал();
		Закрыть();
	Иначе
		МобильныйКлиент.ОповещениеПродолжительноеДваСигнала();
	КонецЕсли;
	
КонецПроцедуры

Функция СделатьПодготовленНаСервере()
	
	Попытка
	
		Док = ВводДанных.ПолучитьОбъект();
		Док.Подготовлен = Истина;
		Док.Записать(РежимЗаписиДокумента.Запись);
		
		Возврат Истина;
	Исключение
	    Сообщить(ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
	
	
КонецФункции

&НаСервере
Функция ПолучитьУпаковкуПоЕдИзмНоменклатуры(Ном)

	// Подставляется ед изм. ШТ так как сами ввели в ручную номенклатуру 
	//в этом случае нет информации о упаковке(ед. изм.)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УпаковкиНоменклатуры.Ссылка КАК УпаковкаШт
		|ИЗ
		|	Справочник.УпаковкиНоменклатуры КАК УпаковкиНоменклатуры
		|ГДЕ
		|	УпаковкиНоменклатуры.Владелец = &Номенклатура
		|	И УпаковкиНоменклатуры.ЕдиницаИзмерения = &ЕдиницаИзмерения
		|	И НЕ УпаковкиНоменклатуры.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("ЕдиницаИзмерения", Ном.ЕдиницаИзмерения);	//Шт
	Запрос.УстановитьПараметр("Номенклатура", Ном);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.УпаковкаШт;
	КонецЦикла;
	
	

КонецФункции // ЗаполнитьУпаковкуШТ()






