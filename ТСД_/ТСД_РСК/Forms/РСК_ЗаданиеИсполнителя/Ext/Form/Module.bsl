
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Инвентаризация = Параметры.Инвентаризация;
	НомерПросчета = Параметры.НомерПросчета;
	Ячейка = Параметры.Ячейка;
	Исполнитель = Параметры.Исполнитель;
	СкладИнвентаризации = Инвентаризация.Склад;
	
	ОбновитьСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Попытка
	
		ВК.ИнициализироватьСканер(Ложь, Истина);	
	
	Исключение
		
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	Попытка
	
		ВК.ОтключитьСканер();
	
	Исключение
	
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если Источник = "ПодключаемоеОборудование"
		И ИмяСобытия = "Barcode"
		И ВводДоступен()	// нужен ли ВводДоступен() в окне где нет определённого поля, куда сканировать ?
		Тогда
		//проверка даты на сервере и на ТСД
		//Сообщить("ТекущаяДата() на клиенте:" + ТекущаяДата());
		//Сообщить("ТекущаяДата() на сервере:" + ПолучитьТекущаяДатанаСервере());
		//Сообщить("ТекущаяДатаСеанса() на сервере:" + ПолучитьТекущаяДатаСеансаНаСервере());
		
		Штрихкод = Параметр;
		// ищем номенклатуру
		ОбработатьШтрихкод(Штрихкод);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьШтрихкод(Штрихкод)

	Структура = 			РСК_ТСД.НайтиНоменклатуруУпаковкуПоШтрихкоду(Штрихкод);
	Номенклатура = 			Структура.Номенклатура;
	УпаковкаПоШтрихкоду = 	Структура.УпаковкаПоШтрихкоду;
	
	Если НЕ ЗначениеЗаполнено(Структура.Номенклатура) Тогда
		МобильныйКлиент.ОповещениеПродолжительноеДваСигнала();
		Предупреждение("Номенклатура с таким Штрихкодом не существует !");
		Возврат;
	КонецЕсли;
	
	МинимУпаковка = РСК_ТСД.ПолучитьУпаковкуПоЕдИзмНоменклатуры(Структура.Номенклатура);
	
	Если НЕ ЗначениеЗаполнено(УпаковкаПоШтрихкоду) Тогда
		МобильныйКлиент.ОповещениеПродолжительноеДваСигнала();
		Предупреждение("Упаковка с таким Штрихкодом не существует !");
		Возврат;
	КонецЕсли;
	
	//проверки
	Если НЕ НоменклатураИзСписка(Структура.Номенклатура) Тогда 
		Если НоменклатураНаходитсяВЯчейке(Структура.Номенклатура) Тогда	
			//товар НЕ из списка, находится в этой ячеке (уже просчитан ранее, в предыдущем просчете, и не подлежит повторному пересчету):
			МобильныйКлиент.ОповещениеПродолжительноеДваСигнала();
			Предупреждение("Номенклатура учтена в ячейке, но НЕ ПОДЛЕЖИТ просчету по заданию"); 
			Возврат;
			//_ ТСД сообщит что товар не подлежит просчету
			
		Иначе
			//если товар НЕ из списка, и НЕ находится в этой ячейке вообще - может быть товар не просчитали при предыдущем просчете: 
			//
			МобильныйКлиент.ОповещениеПродолжительноеДваСигнала();
			Если Вопрос("Номенклатура не учетна в ячейке вообще. Хотите добавить ?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
				Возврат;
			Иначе
				//ничего не делаем
				//_ будет добавлен  в текущий список с количеством, которое введет кладовщик  - в системе будет видно что товар был просчитан на втором шаге(просчете)
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	
	Парам = Новый Структура("Инвентаризация, НомерПросчета, Ячейка, МинимУпаковка, Номенклатура", Инвентаризация, НомерПросчета, Ячейка, МинимУпаковка, Структура.Номенклатура ); 
	КоличествоДобавить = ?(ВводПоШтучно, ПолучитьКоэфУпаковки(МинимУпаковка), ОткрытьФормуМодально("Обработка.ТСД_РСК.Форма.РСК_ВводКоличестваИнвентаризация", Парам)); 

	Если ТипЗнч(КоличествоДобавить) = тип("Число") И КоличествоДобавить > 0 Тогда
		
		Удачно = РСК_ТСД.ЗаписатьИвентарьПриход(Инвентаризация,Ячейка,РСК_ТСД.ПолучитьТекущегоПользователяНаСервере(),НомерПросчета,Структура.Номенклатура,МинимУпаковка,КоличествоДобавить);
		Если Удачно Тогда
			
			ВыделитьСтрокуСНоменклатуройЦветом(Структура.Номенклатура);
			
			ОбновитьСписок();
			
			УстановитьТекущуюСтроку(Структура.Номенклатура);
			
			МобильныйКлиент.ОповещениеКороткоеОдинСигнал();
		Иначе
			МобильныйКлиент.ОповещениеПродолжительноеДваСигнала();
		КонецЕсли;
		
		
		
		
	КонецЕсли;
	ЭтаФорма.ТекущийЭлемент = Элементы.Список;
	
КонецПроцедуры // ОбработатьШтрихкод()

&НаКлиенте
Функция НоменклатураИзСписка(Номенклатура)

	Строки = Список.НайтиСтроки( Новый Структура("Номенклатура", Номенклатура) );
	Возврат Строки.Количество() <> 0;

КонецФункции // НоменклатураИзСписка(Номенклатура)()

&НаКлиенте
Функция НоменклатураНаходитсяВЯчейке(Номенклатура)

	Возврат РСК_ТСД.НоменклатураБезЗаданияНоНаходитсяВЯчейке(Инвентаризация,НомерПросчета,Ячейка,Номенклатура);

КонецФункции // НоменклатураНаходитсяВЯчейке(Номенклатура)()
 

&НаСервере
Процедура ВыделитьСтрокуСНоменклатуройЦветом(Знач Номенклатура)
	
	//условное оформление
	//УсловноеОформление.Элементы.Очистить()
	УсловноеОформление.Элементы[0].Отбор.Элементы[0].ПравоеЗначение 	= Номенклатура;
	УсловноеОформление.Элементы[0].Отбор.Элементы[0].Использование		= Истина;
	//Элемент = УсловноеОформление.Элементы.Добавить();
	//
	//ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	//ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ТЗНоменклатура");
	//
	//ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТЗ.Номенклатура");
	//ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	//ОтборЭлемента.ПравоеЗначение = СтрокаТЧПоступления.Номенклатура;
	////Элемент.Использование = Истина;
	//
	//Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.СветлоЗолотистый);

КонецПроцедуры

&НаСервере
Функция ПолучитьКоэфУпаковки(Знач Упаковка_)
	
	Возврат Упаковка_.Коэффициент;

КонецФункции // ОбработатьШтрихкод(Штрихкод)()

&НаКлиенте
Процедура УстановитьТекущуюСтроку(Знач Номенклатура)
	
	Перем СтрокиСНоменклатурой;
	
	//выделить строку с отсканированной номенклатурой. Найти надо по текущему коробу именно
	СтрокиСНоменклатурой = Список.НайтиСтроки(Новый Структура("Номенклатура",Номенклатура));
	Если СтрокиСНоменклатурой.Количество() > 0 тогда
		Элементы.Список.ТекущаяСтрока = СтрокиСНоменклатурой[0].ПолучитьИдентификатор();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СписокОбработкаЗапросаОбновления()
	ОбновитьСписок();
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекущиеДанные = Список.НайтиПоИдентификатору(ВыбраннаяСтрока);
	МинимУпаковка = РСК_ТСД.ПолучитьУпаковкуПоЕдИзмНоменклатуры(ТекущиеДанные.Номенклатура);
	Структура =	Новый Структура("Номенклатура, УпаковкаПоШтрихкоду, МинимУпаковка", ТекущиеДанные.Номенклатура, , МинимУпаковка);
	// нашли - Структура("Номенклатура, УпаковкаПоШтрихкоду, МинимУпаковка (по ед. изм. номенклатуры)"
	
	МассивДействий = Новый Массив;
	МассивДействий.Добавить("ДобавитьКоличество");
	МассивДействий.Добавить("УдалитьКоличество");
	МассивДействий.Добавить("УдалитьСтроку");
	//МассивДействий.Добавить("ДобавитьНовуюНоменклатуру");
	МассивДействий.Добавить("Отмена");
	
	Парам = Новый Структура("МассивДействий, Номенклатура", МассивДействий, ТекущиеДанные.Номенклатура);
	Ответ = ОткрытьФормуМодально("Обработка.ТСД_РСК.Форма.ДействияСНоменклатурой",Парам);
	Если Не ЗначениеЗаполнено(Ответ) Тогда 
		Возврат;
	КонецЕсли;
	
	Если Ответ = "ДобавитьКоличество" Тогда
			
			Парам = Новый Структура("Инвентаризация, НомерПросчета, Ячейка, МинимУпаковка, Номенклатура", Инвентаризация, НомерПросчета, Ячейка, МинимУпаковка, Структура.Номенклатура );
			КоличествоДобавить = ОткрытьФормуМодально("Обработка.ТСД_РСК.Форма.РСК_ВводКоличестваИнвентаризация", Парам);
			КоличествоДобавить = ?(ЗначениеЗаполнено(КоличествоДобавить), КоличествоДобавить, 0);
			
			Если КоличествоДобавить > 0 Тогда
				Удачно = РСК_ТСД.ЗаписатьИвентарьПриход(Инвентаризация,Ячейка,Исполнитель,НомерПросчета,Структура.Номенклатура,МинимУпаковка,КоличествоДобавить);
				Если Удачно Тогда
					
					ВыделитьСтрокуСНоменклатуройЦветом(Структура.Номенклатура);
					ОбновитьСписок();
					УстановитьТекущуюСтроку(Структура.Номенклатура);
					
					МобильныйКлиент.ОповещениеКороткоеОдинСигнал();
				Иначе
					МобильныйКлиент.ОповещениеПродолжительноеДваСигнала();
				КонецЕсли;			
			КонецЕсли;
			
		ИначеЕсли Ответ = "УдалитьКоличество" Тогда
			Парам = Новый Структура("Инвентаризация, НомерПросчета, Ячейка, МинимУпаковка, Номенклатура", Инвентаризация, НомерПросчета, Ячейка, МинимУпаковка, Структура.Номенклатура );
			КоличествоУдалить = ОткрытьФормуМодально("Обработка.ТСД_РСК.Форма.РСК_ВводКоличестваИнвентаризация", Парам);
			КоличествоУдалить = ?(ЗначениеЗаполнено(КоличествоУдалить), КоличествоУдалить, 0);
			
			Если КоличествоУдалить > 0 Тогда
				Удачно = РСК_ТСД.ЗаписатьИнвентарьРасход(Инвентаризация,Ячейка,Исполнитель,НомерПросчета,Структура.Номенклатура,МинимУпаковка,КоличествоУдалить);
				Если Удачно Тогда
					
					ВыделитьСтрокуСНоменклатуройЦветом(Структура.Номенклатура);
					ОбновитьСписок();
					УстановитьТекущуюСтроку(Структура.Номенклатура);
					
					МобильныйКлиент.ОповещениеКороткоеОдинСигнал();
				Иначе
					МобильныйКлиент.ОповещениеПродолжительноеДваСигнала();
				КонецЕсли;			
			КонецЕсли;

			
		ИначеЕсли Ответ = "УдалитьСтроку" Тогда
			Ответ = Вопрос("Действительно Удалить строку с номенклатурой и всё кол-во ?", РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет, , КодВозвратаДиалога.Нет);
			Если Ответ = КодВозвратаДиалога.Да Тогда
					Удачно = РСК_ТСД.ЗаписатьИнвентарьРасход(Инвентаризация,Ячейка,Исполнитель,НомерПросчета,Структура.Номенклатура,МинимУпаковка,ТекущиеДанные.Факт);
					Если Удачно Тогда
						
						ВыделитьСтрокуСНоменклатуройЦветом(Структура.Номенклатура);
						ОбновитьСписок();
						//УстановитьТекущуюСтроку(Структура.Номенклатура);
						
						МобильныйКлиент.ОповещениеКороткоеОдинСигнал();
					Иначе
						МобильныйКлиент.ОповещениеПродолжительноеДваСигнала();
					КонецЕсли;			
				
			КонецЕсли;
			
		//ИначеЕсли Ответ = "ДобавитьНовуюНоменклатуру" Тогда
			//
			
		КонецЕсли;
		ЭтаФорма.ТекущийЭлемент = Элементы.Список;
		
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВручную(Команда)
	
	ПараметрыФормы = Новый Структура("Инвентаризация, НомерПросчета, Ячейка, Номенклатура", Инвентаризация, НомерПросчета, Ячейка); 
	СтруктураОтвет = ОткрытьФормуМодально("Обработка.ТСД_РСК.Форма.РСК_ВводКоличестваИнвентаризацияНоваяВручную",ПараметрыФормы);
	СтруктураОтвет.КоличествоДобавить = ?(ЗначениеЗаполнено(СтруктураОтвет.КоличествоДобавить), СтруктураОтвет.КоличествоДобавить, 0);
	Если СтруктураОтвет.КоличествоДобавить > 0 Тогда
		Удачно = РСК_ТСД.ЗаписатьИвентарьПриход(Инвентаризация,Ячейка,РСК_ТСД.ПолучитьТекущегоПользователяНаСервере(),НомерПросчета,СтруктураОтвет.Номенклатура,СтруктураОтвет.МинимУпаковка,СтруктураОтвет.КоличествоДобавить);
		Если Удачно Тогда
			
			ВыделитьСтрокуСНоменклатуройЦветом(СтруктураОтвет.Номенклатура);
			ОбновитьСписок();
			УстановитьТекущуюСтроку(СтруктураОтвет.Номенклатура);
			
			МобильныйКлиент.ОповещениеКороткоеОдинСигнал();
		Иначе
			МобильныйКлиент.ОповещениеПродолжительноеДваСигнала();
		КонецЕсли;			
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЯчейкаПриИзменении(Элемент)
	ОбновитьСписок();
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписок()

	ТЗ = РСК_ТСД.ПолучитьТЗНоменклатурыПоИсполнителю(Инвентаризация, НомерПросчета, Ячейка, Исполнитель);
	ЗначениеВРеквизитФормы(ТЗ,"Список");
	
КонецПроцедуры // ОбновитьСписок()

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	//СтандартнаяОбработка = Ложь;
	Если Вопрос("Завершить просчет перед выходом, вы завершили ввод данных по ячейке ? После этого нельзя будет ничего ввести в ячейку по номенклатурам из списка. Завершить пересчет ?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		ЗавершитьПересчетЗаданияПоЯчейке();
		//Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗавершитьПересчетЗаданияПоЯчейке()
	
	//установить признак пересчет завершен
	ТЗтабчасть = Список.Выгрузить();
	Для каждого Стр Из ТЗтабчасть Цикл
	
		Удачно = РСК_ТСД.УстановитьПересчетЗавершенДляЗаданияИнвентаризацииЗапись(Инвентаризация, НомерПросчета, Ячейка, Стр.Номенклатура);
	
	КонецЦикла; 

	
	//попытаться создать задание если есть отклонение
	Для каждого Стр Из ТЗтабчасть Цикл
	
		РСК_ТСД.СоздатьЗаданиеПоНоменклатуре(Инвентаризация, Стр.Номенклатура, НомерПросчета);
	
	КонецЦикла; 
	
	
КонецПроцедуры // ЗавершитьПересчетПоЯчейке()
 