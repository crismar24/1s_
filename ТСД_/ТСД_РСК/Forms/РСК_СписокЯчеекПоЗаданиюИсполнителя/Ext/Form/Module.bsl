
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Инвентаризация = Параметры.Инвентаризация;
	НомерПросчета = Параметры.НомерПросчета;
	Исполнитель = Параметры.Исполнитель;
	
	
	Список.Параметры.УстановитьЗначениеПараметра("Инвентаризация",Инвентаризация);
	Список.Параметры.УстановитьЗначениеПараметра("НомерПросчета",НомерПросчета);
	Список.Параметры.УстановитьЗначениеПараметра("Исполнитель",Исполнитель);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Попытка
	
		ВК.ИнициализироватьСканер(Ложь, Истина);	
	
	Исключение
		
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	Попытка
	
		ВК.ОтключитьСканер();
	
	Исключение
	
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если Источник = "ПодключаемоеОборудование"
		И ИмяСобытия = "Barcode"
		И ВводДоступен()	// нужен ли ВводДоступен() в окне где нет определённого поля, куда сканировать ?
		Тогда
		//проверка даты на сервере и на ТСД
		//Сообщить("ТекущаяДата() на клиенте:" + ТекущаяДата());
		//Сообщить("ТекущаяДата() на сервере:" + ПолучитьТекущаяДатанаСервере());
		//Сообщить("ТекущаяДатаСеанса() на сервере:" + ПолучитьТекущаяДатаСеансаНаСервере());
		
		Штрихкод = Параметр;
		// ищем номенклатуру
		ОбработатьШтрихкод(Штрихкод);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьШтрихкод(Штрихкод)

	Ячейка = ПолучитьЯчейкуПоШК(Штрихкод);
	Если ЗначениеЗаполнено(Ячейка) Тогда
		Если ЯчейкаВходитВЗаданияИсполнителя(Ячейка) Тогда
			ПараметрыФормы = Новый Структура("Инвентаризация, НомерПросчета, Ячейка, Исполнитель", Инвентаризация, НомерПросчета, Ячейка, Исполнитель);
			ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ОбновитьСписокЗавершение",ЭтотОбъект,);
			ОткрытьФорму("Обработка.ТСД_РСК.Форма.РСК_ЗаданиеИсполнителя", ПараметрыФормы,,,,,ОписаниеОповещенияОЗакрытии); 
		Иначе
			Предупреждение("Такой ячеки нет у Вас в заданиях на просчет");
			Возврат;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // ОбработатьШтрихкод()

&НаСервере
Функция ЯчейкаВходитВЗаданияИсполнителя(Ячейка)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РегистрСведенийРСК_ЗаданияИнвентаризации.Ячейка
		|ИЗ
		|	РегистрСведений.РСК_ЗаданияИнвентаризации КАК РегистрСведенийРСК_ЗаданияИнвентаризации
		|ГДЕ
		|	РегистрСведенийРСК_ЗаданияИнвентаризации.ДокументИнвентаризация = &Инвентаризация
		|	И РегистрСведенийРСК_ЗаданияИнвентаризации.НомерПросчета = &НомерПросчета
		|	И РегистрСведенийРСК_ЗаданияИнвентаризации.Исполнитель = &Исполнитель
		|	И НЕ РегистрСведенийРСК_ЗаданияИнвентаризации.ПересчетЗавершен
		|	И РегистрСведенийРСК_ЗаданияИнвентаризации.Ячейка = &Ячейка";
	
	Запрос.УстановитьПараметр("Инвентаризация", Инвентаризация);
	Запрос.УстановитьПараметр("Исполнитель", Исполнитель);
	Запрос.УстановитьПараметр("НомерПросчета", НомерПросчета);
	Запрос.УстановитьПараметр("Ячейка", Ячейка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции // ЯчейкаВходитВЗаданияИсполнителя()

&НаСервере
Функция ПолучитьЯчейкуПоШК(Штрихкод)

	Возврат Справочники.СкладскиеЯчейки.НайтиПоКоду(Штрихкод,,,Инвентаризация.Склад);

КонецФункции // ПолучитьЯчейкуПоШК()

&НаКлиенте
Процедура ОбновитьСписокЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Элементы.Список.Обновить();
	

КонецПроцедуры

&НаКлиенте
Процедура СписокОбработкаЗапросаОбновления()
	Элементы.Список.Обновить();
КонецПроцедуры


&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Ячейка = Элементы.Список.ТекущиеДанные.Ячейка;
	
	ПараметрыФормы  = Новый Структура("Инвентаризация, НомерПросчета, Ячейка, Исполнитель", Инвентаризация, НомерПросчета, Ячейка, Исполнитель);
	ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ОбновитьСписокЗавершение",ЭтотОбъект,);
	ОткрытьФорму("Обработка.ТСД_РСК.Форма.РСК_ЗаданиеИсполнителя",ПараметрыФормы,,,,,ОписаниеОповещенияОЗакрытии);
	
КонецПроцедуры

