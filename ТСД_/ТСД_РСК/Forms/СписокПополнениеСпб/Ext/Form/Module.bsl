
&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	//заказ на списание в расходы -№ 307681     от 30.08.2019  0:00:00
	//списание на расходы
	//расходный ордер
	//Отбор
	
	ЗаказНаВнутреннееПотребление 		= ВыбраннаяСтрока;
	ВнутреннееПотреблениеТоваров 		= ВнутреннееПотреблениеТоваров(ЗаказНаВнутреннееПотребление);
	РасходныйОрдер						= НайтиРасходныйОрдер(ВнутреннееПотреблениеТоваров);
	Отбор								= НайтиОтбор(РасходныйОрдер);
	Если (НЕ ЗначениеЗаполнено(Отбор) 
		ИЛИ НЕ ЗначениеЗаполнено(РасходныйОрдер) 
		ИЛИ НЕ ЗначениеЗаполнено(ВнутреннееПотреблениеТоваров) 
		ИЛИ НЕ ЗначениеЗаполнено(ЗаказНаВнутреннееПотребление)) Тогда
		Предупреждение("Подчиненные документы не заполнены !");
		Возврат;
	КонецЕсли;
	
	Парам = Новый Структура("ОсновнойСклад, ВводПоШтучно, ЗаказНаВнутреннееПотребление, ВнутреннееПотреблениеТоваров, РасходныйОрдер, Отбор", ОсновнойСклад, ВводПоШтучно, ЗаказНаВнутреннееПотребление, ВнутреннееПотреблениеТоваров, РасходныйОрдер, Отбор);
	
	ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ОбновитьСписокЗавершение",ЭтотОбъект,);
	ОткрытьФорму("Обработка.ТСД_РСК.Форма.ОтборСПб",Парам,,,,,ОписаниеОповещенияОЗакрытии);

КонецПроцедуры

&НаСервере
Функция НайтиОтбор(Знач РасходныйОрдер)
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ОтборРазмещениеТоваров.Ссылка
	//	|ИЗ
	//	|	Документ.ОтборРазмещениеТоваров КАК ОтборРазмещениеТоваров
	//	|ГДЕ
	//	|	ОтборРазмещениеТоваров.Проведен
	//	|	И ОтборРазмещениеТоваров.Склад = &ОсновнойСклад
	//	|	И ОтборРазмещениеТоваров.Распоряжение = &Распоряжение";
	//
	//Запрос.УстановитьПараметр("ОсновнойСклад", ОсновнойСклад);
	//Запрос.УстановитьПараметр("Распоряжение", РасходныйОрдер);
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//
	//Если ВыборкаДетальныеЗаписи.Количество() = 1 Тогда 
	//	ВыборкаДетальныеЗаписи.Следующий();
	//	Возврат ВыборкаДетальныеЗаписи.Ссылка;
	//Иначе
	//	Возврат Документы.ОтборРазмещениеТоваров.ПустаяСсылка();
	//КонецЕсли;
	
	Возврат Обработки.ТСД_РСК.ПолучитьОтборТоваров(РасходныйОрдер, ОсновнойСклад);

КонецФункции

&НаСервере
Функция НайтиРасходныйОрдер(Знач ВнутреннееПотреблениеТоваров)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасходныйОрдерНаТовары.Ссылка
		|ИЗ
		|	Документ.РасходныйОрдерНаТовары КАК РасходныйОрдерНаТовары
		|ГДЕ
		|	РасходныйОрдерНаТовары.Проведен
		|	И РасходныйОрдерНаТовары.Склад = &ОсновнойСклад
		|	И РасходныйОрдерНаТовары.Распоряжение = &Распоряжение";
	
	Запрос.УстановитьПараметр("ОсновнойСклад", ОсновнойСклад);
	Запрос.УстановитьПараметр("Распоряжение", ВнутреннееПотреблениеТоваров);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Количество() = 1 Тогда 
		ВыборкаДетальныеЗаписи.Следующий();
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	Иначе
		Возврат Документы.РасходныйОрдерНаТовары.ПустаяСсылка();
	КонецЕсли;

КонецФункции

&НаСервере
Функция ВнутреннееПотреблениеТоваров(Знач ЗаказНаВнутреннееПотребление)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВнутреннееПотреблениеТоваров.Ссылка
		|ИЗ
		|	Документ.ВнутреннееПотреблениеТоваров КАК ВнутреннееПотреблениеТоваров
		|ГДЕ
		|	ВнутреннееПотреблениеТоваров.ЗаказНаВнутреннееПотребление = &ЗаказНаВнутреннееПотребление
		|	И ВнутреннееПотреблениеТоваров.Проведен";
	
	Запрос.УстановитьПараметр("ЗаказНаВнутреннееПотребление", ЗаказНаВнутреннееПотребление);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Количество() = 1 Тогда 
		ВыборкаДетальныеЗаписи.Следующий();
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	Иначе
		Возврат Документы.ВнутреннееПотреблениеТоваров.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВводПоШтучно 	= Параметры.ВводПоШтучно;
	ОсновнойСклад	= Параметры.ОсновнойСклад;
	Список.Параметры.УстановитьЗначениеПараметра("ОсновнойСклад",ОсновнойСклад);
	
	
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьСписокЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Элементы.Список.Обновить();
	

КонецПроцедуры


&НаКлиенте
Процедура СписокОбработкаЗапросаОбновления()
	Элементы.Список.Обновить();
КонецПроцедуры

