
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Перем МассивСвойств, тзОсновнойСклад;
	
	МассивСвойств = Новый Массив;
	МассивСвойств.Добавить(ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Основной склад"));
	тзОсновнойСклад = УправлениеСвойствами.ПолучитьЗначенияСвойств(Пользователи.ТекущийПользователь(),Ложь,Истина,МассивСвойств);
	ОсновнойСклад = Справочники.Склады.ПустаяСсылка();
	Попытка
		ОсновнойСклад = тзОсновнойСклад[0].Значение;	
	Исключение
		Сообщить("Не заполнен основной склад");
	КонецПопытки;
	
	
	ВводПоШтучно = Параметры.ВводПоШтучно;
	Список.Параметры.УстановитьЗначениеПараметра("ОсновнойСклад",ОсновнойСклад);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОбработкаЗапросаОбновления()
	Элементы.Список.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	//создаются при загруке СКЗ из файла:
	//Реализация 		статус-	 	(Выгружен на ТСД для отбора)   
	//Расход. ордер 	статус- 	(К Отбору)
	//Отбор 			статус-		(В Работе)
	//причем Отбор заполняется номенклатурой, по плану, как в Расход. ордере
	// очищаем ТЧ Отбора.
	РасходныйОрдер 	= ПолучитьРасходныйОрдер(ВыбраннаяСтрока);
	Отбор			= ПолучитьОтборТоваров(РасходныйОрдер);
	Если (НЕ ЗначениеЗаполнено(Отбор) 
		ИЛИ НЕ ЗначениеЗаполнено(РасходныйОрдер)) Тогда
		Предупреждение("Подчиненные документы не заполнены !");
		Возврат;
	КонецЕсли;
	
	Парам = Новый Структура("ОсновнойСклад,Реализация,РасходныйОрдер,Отбор,ВводПоШтучно", ОсновнойСклад, ВыбраннаяСтрока, РасходныйОрдер, Отбор, ВводПоШтучно);
	
	ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ОбновитьСписокЗавершение",ЭтотОбъект,);
	ОткрытьФорму("Обработка.ТСД_РСК.Форма.Отбор",Парам,,,,,ОписаниеОповещенияОЗакрытии);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Элементы.Список.Обновить();
	

КонецПроцедуры


&НаСервере
Функция ПолучитьРасходныйОрдер(Реализация)
		
	////
	////ищем, может есть уже приходный
	//РасходныйОрдер = Документы.РасходныйОрдерНаТовары.НайтиПоРеквизиту("Распоряжение", Реализация); 
	//Если РасходныйОрдер = Документы.ПриходныйОрдерНаТовары.ПустаяСсылка() Тогда
	//	//ПриходныйОрдер = Документы.ПриходныйОрдерНаТовары.СоздатьДокумент();
	//	////не проставляются упаковки, поэтому через выгрузить-загрузить
	//	//ПриходныйОрдер.Заполнить(Поступление);
	//	//ПриходныйОрдер.Склад = ОсновнойСклад;
	//	//ПриходныйОрдер.СкладскаяОперация = Перечисления.СкладскиеОперации.ПриемкаОтПоставщика;
	//	//ПриходныйОрдер.НомерПоступления = Поступление.Номер;
	//	//ПриходныйОрдер.ЗонаПриемки = Справочники.СкладскиеЯчейки.НайтиПоНаименованию("Приемка",,,ОсновнойСклад);;
	//	//ПриходныйОрдер.Дата = Поступление.Дата;
	//	//ПриходныйОрдер.Статус = Перечисления.СтатусыПриходныхОрдеров.Принят;
	//	//ПриходныйОрдер.Ответственный = Пользователи.ТекущийПользователь();
	//	//ПриходныйОрдер.Товары.Загрузить(Поступление.Товары.Выгрузить());//каждый раз НЕ перезаписываем ТЧ Прих.ордера из ТЧ Поступления
	//	//ПриходныйОрдер.Записать(РежимЗаписиДокумента.Проведение);
	//КонецЕсли;
	//
	//Возврат РасходныйОрдер.Ссылка;
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	РасходныйОрдерНаТовары.Ссылка
	//	|ИЗ
	//	|	Документ.РасходныйОрдерНаТовары КАК РасходныйОрдерНаТовары
	//	|ГДЕ
	//	|	РасходныйОрдерНаТовары.Проведен
	//	|	И РасходныйОрдерНаТовары.Распоряжение = &Реализация
	//	|	И РасходныйОрдерНаТовары.Склад = &ОсновнойСклад";
	//
	//Запрос.УстановитьПараметр("Реализация", Реализация);
	//Запрос.УстановитьПараметр("ОсновнойСклад", ОсновнойСклад);
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//Если ВыборкаДетальныеЗаписи.Количество() = 1 Тогда 
	//	ВыборкаДетальныеЗаписи.Следующий();
	//	Возврат ВыборкаДетальныеЗаписи.Ссылка;
	//Иначе
	//	Возврат Документы.РасходныйОрдерНаТовары.ПустаяСсылка();
	//КонецЕсли;
	
	Возврат Обработки.ТСД_РСК.ПолучитьРасходныйОрдер(Реализация, ОсновнойСклад);
	
КонецФункции // ПолучитьПриходныйОрдер()

&НаСервере
Функция ПолучитьОтборТоваров(РасходныйОрдер)
	
	//
		
	//Отбор = Документы.ОтборРазмещениеТоваров.НайтиПоРеквизиту("Распоряжение", РасходныйОрдер);
	//// как понять что мы уже очищали отбор т.к. его автом. заполняет загрузка ?
	//// новый признак булево ?
	//// или по статусу ?
	////Если Отбор.ТоварыОтбор.Количество() > 0 Тогда
	////Попытка
	////	Док = Отбор.ПолучитьОбъект();
	////	Док.ТоварыОтбор.Очистить();
	////	Док.Записать(РежимЗаписиДокумента.Проведение);
	////Исключение
	////	Сообщить("Ошибка очищения док-та Отбор "+ОписаниеОшибки());
	////КонецПопытки;
	////Отбор = Док.Ссылка;
	//
	//Если Отбор = Документы.ОтборРазмещениеТоваров.ПустаяСсылка() Тогда
	//	//Размещение = Документы.ОтборРазмещениеТоваров.СоздатьДокумент();
	//	//
	//	//Размещение.ЗонаПриемки = Справочники.СкладскиеЯчейки.НайтиПоНаименованию("Приемка",,,ПриходныйОрдер.Склад);
	//	//Размещение.Склад = ПриходныйОрдер.Склад;
	//	//Размещение.Ответственный = Пользователи.ТекущийПользователь();
	//	//Размещение.ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Размещение;
	//	//Размещение.Дата = ПриходныйОрдер.Дата;
	//	//Размещение.Распоряжение = ПриходныйОрдер;
	//	//Размещение.НомерЗадания = ПриходныйОрдер.НомерПоступления;
	//	////Размещение.Заполнить(ПриходныйОрдер);	
	//	//// не надо заполнять ТЧ - она будет заполняться кладовщиком каждый раз при сканировании 
	//	//// полностью вся СТРОКА ТЧ документа Поступление, номенклатура которой сканировалась,
	//	//// будет передаваться в ТЧ Размещения и заполняться все колонки в соответственно:
	//	//////Стр.Номенклатура = Элем.Номенклатура;
	//	////
	//	//// Выводить опционально(ВводПоШтучно) Вопрос о вводе количества по введённой номенклатуре
	//	//////Стр.Количество = Элем.Количество;
	//	//////Стр.КоличествоУпаковок = Элем.Количество;
	//	//////Стр.Упаковка = Элем.Упаковка;
	//	////
	//	//////Стр.Ячейка	- пока что "00000"
	//	//// в будущем выводить Окно-Запрос о сканировании ШТРИХКОДА ЯЧЕЙКИ
	//	////
	//	////
	//	//Размещение.Записать(РежимЗаписиДокумента.Запись);
	//	////Размещение.Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.ВыполненоБезОшибок;	// такой статус в этом случае ?
	//	//Размещение.Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.ВРаботе;	//чтобы знать что ведётся работа по терминалу
	//	//// При завершении Размещения - Поменять СТАТУС на Выполнено (с ошибка, без ошибок).
	//	//// Также в этот момент можно записать время работы по документу. 
	//	//// Только вопрос: если записывать просто период времени,
	//	//// то что делать, если предположим решили "допринять", кладовщик еще будет работать по документу ?
	//	//// в ТЧ ВыполнениеРабот буду записывать нового работника
	//	//// если тот же Работник, буду добавлять к уже записанному времени работы
	//	//// 
	//	//// Вычислять время работы Работника буду по
	//	//// -ДатаПервогоСканирования
	//	//// -ДатаПоследнегоСканирования
	//	//// При "завершении работы складовщиком над документом" - смены статутса на Выполнено -
	//	//// - будут обнуляться резвизиты -ДатаПервогоСканирования -ДатаПоследнегоСканирования
	//	////
	//	//
	//	//Размещение.Записать(РежимЗаписиДокумента.Проведение);
	//	//
	//КонецЕсли;
	//
	//Возврат Отбор.Ссылка;
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ОтборРазмещениеТоваров.Ссылка
	//	|ИЗ
	//	|	Документ.ОтборРазмещениеТоваров КАК ОтборРазмещениеТоваров
	//	|ГДЕ
	//	|	ОтборРазмещениеТоваров.Распоряжение = &РасходныйОрдер
	//	|	И ОтборРазмещениеТоваров.Проведен
	//	|	И ОтборРазмещениеТоваров.Склад = &ОсновнойСклад";
	//
	//Запрос.УстановитьПараметр("РасходныйОрдер", РасходныйОрдер);
	//Запрос.УстановитьПараметр("ОсновнойСклад", ОсновнойСклад);
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//
	//Если ВыборкаДетальныеЗаписи.Количество() = 1 Тогда 
	//	ВыборкаДетальныеЗаписи.Следующий();
	//	Возврат ВыборкаДетальныеЗаписи.Ссылка;
	//Иначе
	//	Возврат Документы.ОтборРазмещениеТоваров.ПустаяСсылка();
	//КонецЕсли;
	
	Возврат Обработки.ТСД_РСК.ПолучитьОтборТоваров(РасходныйОрдер, ОсновнойСклад);
	
КонецФункции // СоздатьРазмещениеТоваров()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ВК.ИнициализироватьСканер(Ложь, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	ВК.ОтключитьСканер();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	//тест
	//Сообщить(Строка("ИмяСобытия: " +ИмяСобытия));
	
	
	Если Источник = "ПодключаемоеОборудование"
		И ИмяСобытия = "Barcode"
		И ВводДоступен()	// нужен ли ВводДоступен() в окне где нет определённого поля, куда сканировать ?
		Тогда
		
		ШК = Параметр;
		//Сообщить(Строка("Привет из списка реализаций: "+Параметр));
		//Обработка штрихкода документа и послед. открытие формы для ТСД
		Если Лев(ШК,3) = "001" Тогда
			
			Реализация = НайтиРеализациюПоШК(ШК);
			Если ЗначениеЗаполнено(Реализация) Тогда
				
				Парам = ПолучитьПараметры(Реализация);
				Если (НЕ ЗначениеЗаполнено(Парам.Отбор) 
					ИЛИ НЕ ЗначениеЗаполнено(Парам.РасходныйОрдер)) Тогда
					Предупреждение("Подчиненные документы не заполнены !");
					Возврат;
				КонецЕсли;
				ОткрытьФорму("Обработка.ТСД_РСК.Форма.Отбор",парам);
				
			Иначе
				Предупреждение("Задание не найдено !");
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция  НайтиРеализациюПоШК(ШК)
	//В Реализации должны быть
	//в Номере только цифры т.е. ГП, 
	//статус отгрузки = Перечисление.СтатусыРеализацийТоваров.ВыгруженНаТСДДляОтбора
	
	ОсновнойСклад = СкладыСервер.ПолучитьСкладПользователя(Пользователи.ТекущийПользователь());
	
	
	Номер	= ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Сред(ШК,4,6));
	//Пока Лев(Номер,1) = "0" Цикл
	//	Номер = Прав(Номер,СтрДлина(Номер)-1);
	//КонецЦикла;
	
	Дата 	= Сред(ШК,10,6);
	Дата	= ПолучитьДатуДок(Дата);
	
	Статусы = Новый Массив;
	Статусы.Добавить(Перечисления.СтатусыРеализацийТоваров.ВыгруженНаТСДДляОтбора);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка КАК Документ
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.Проведен
		|	И РеализацияТоваровУслуг.Дата = &Дата
		|	И РеализацияТоваровУслуг.Номер = &Номер
		|	И РеализацияТоваровУслуг.СтатусОтгрузки В(&Статусы)
		|	И РеализацияТоваровУслуг.Склад = &ОсновнойСклад";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Номер", Номер);
	Запрос.УстановитьПараметр("Статусы", Статусы);
	Запрос.УстановитьПараметр("ОсновнойСклад", ОсновнойСклад);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Документ;
	КонецЦикла;
	
	Возврат Документы.РеализацияТоваровУслуг.ПустаяСсылка();

	
КонецФункции // НайтиДокументПоШК()

&НаСервере
Функция ПолучитьПараметры(Реализация)
	
	//РасходныйОрдер = Документы.РасходныйОрдерНаТовары.НайтиПоРеквизиту("Распоряжение", Реализация);
	//Отбор = Документы.ОтборРазмещениеТоваров.НайтиПоРеквизиту("Распоряжение", РасходныйОрдер);
	
	РасходныйОрдер 	= Обработки.ТСД_РСК.ПолучитьРасходныйОрдер(Реализация, ОсновнойСклад);
	Отбор			= Обработки.ТСД_РСК.ПолучитьОтборТоваров(РасходныйОрдер, ОсновнойСклад);
	
	Парам = Новый Структура("	ВводПоШтучно, 	Отбор, 	РасходныйОрдер, Реализация, ОсновнойСклад", 
								ВводПоШтучно,	Отбор,	РасходныйОрдер, Реализация, ОсновнойСклад);
	Возврат Парам;

КонецФункции // ПолучитьПараметры()

&НаСервере
Функция ПолучитьДатуДок(СтрокаДата)
	Год 	= "20" + Сред(СтрокаДата,5,2);
	Месяц   = Сред(СтрокаДата,3,2);
	День    = Сред(СтрокаДата,1,2);
	Возврат Дата(Год,Месяц,День);

КонецФункции // ПоискРеализацииПоШК()
